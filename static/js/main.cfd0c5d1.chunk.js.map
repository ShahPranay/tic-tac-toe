{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculatewinner","squares","lines","i","GameOptions","state","firstplayer","difficulty","handleplayerchange","bind","handlediffchange","handlesubmit","event","this","setState","target","onstart","preventDefault","onSubmit","onChange","type","React","Component","Board","Array","fill","gamestate","compmove","squarenum","squarestmp","possiblemoves","size","push","Math","random","floor","tmp","backtracking","slice","tmp2","j","alert","handleclick","status","winlines","loselines","drawlines","gs","length","reset","resetdone","renderSquare","Game","startgame","player","diff","href","player2","player1","id","p","n","bestmove","Infinity","nxt","nextans","sq","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfd0c5d1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n}\n\nfunction calculatewinner(squares){\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6],\n  ];\n  for(let i=0;i<8;++i){\n    if(squares[lines[i][0]] && squares[lines[i][1]]===squares[lines[i][0]] && squares[lines[i][2]]===squares[lines[i][0]]){\n      return squares[lines[i][0]];\n    }\n  }\n  return 0;\n}\n\nclass GameOptions extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      firstplayer:this.props.firstplayer,\n      difficulty:this.props.difficulty,\n    }\n    this.handleplayerchange=this.handleplayerchange.bind(this);\n    this.handlediffchange=this.handlediffchange.bind(this);\n    this.handlesubmit=this.handlesubmit.bind(this);\n  }\n  handleplayerchange(event){\n    this.setState({firstplayer: event.target.value});\n  }\n  handlediffchange(event){\n    this.setState({difficulty: event.target.value});\n  }\n  handlesubmit(event){\n    this.props.onstart(this.state.firstplayer,this.state.difficulty);\n    event.preventDefault();\n  }\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handlesubmit}>\n          <label className=\"firstplayer\" >\n            Choose first player:\n            <select value={this.state.firstplayer} onChange={this.handleplayerchange}>\n              <option value={1}>You</option>\n              <option value={2}>Computer</option>\n            </select>\n          </label>\n          <label className=\"difficulty\">\n            Set difficulty:\n            <select value={this.state.difficulty} onChange={this.handlediffchange}>\n              <option value={0.7}>Easy</option>\n              <option value={0.85}>Medium</option>\n              <option value={1}>Hard</option>\n            </select>\n          </label>\n          <input className=\"startbutton\" type=\"submit\" value=\"Start Game\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      squares:Array(9).fill(null),\n      gamestate:null,\n    }\n    this.compmove=this.compmove.bind(this);\n  }\n  compmove(squarenum,squarestmp){\n    var possiblemoves=[],size=0;\n    for(let i=0;i<9;++i){\n      if(squarenum[i]===0){\n        possiblemoves.push(i);\n        size++;\n      }\n    }\n    var r=Math.random();\n    if(r>this.props.difficulty){\n      var m=Math.floor(Math.random()*size);\n      squarestmp[possiblemoves[m]]='O';\n    }\n    else{\n      let tmp=backtracking(squarenum.slice(),2);\n      if(tmp[0]>=0 && tmp[0]<9){\n        squarestmp[tmp[0]]='O';\n      }\n      else{\n        this.setState({gamestate:((tmp[1]>0)?2:((tmp[1]===0)?0:1))});\n      }\n    }\n    this.setState({squares:squarestmp});\n    var tmp2=calculatewinner(squarestmp);\n    if(size===1 || tmp2){\n      this.setState({gamestate:tmp2});\n    }\n\n  }\n  handleclick(i){\n    var squarestmp=this.state.squares.slice();var squarenum=Array(9).fill(0);\n    for(let j=0;j<9;j++){\n      if(squarestmp[j]==='X')\n        squarenum[j]=1;\n      else if(squarestmp[j]==='O')\n        squarenum[j]=2;\n    }\n    if(squarestmp[i]!==null || this.state.gamestate!=null){\n      alert('illegal move');\n    }\n    else{\n      squarenum[i]=1;\n      squarestmp[i]='X';\n      this.compmove(squarenum,squarestmp);\n      \n    } \n  }\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.state.squares[i]}\n        onClick={()=>this.handleclick(i)}\n      />\n    );\n  }\n  render() {\n    var status = 'Play';\n    const winlines=[\n      \"You- You must have cheated!\",\n      \"This can't be possible!\",\n      \"What kind of a loser plays in easy modes?!\",\n      \"You Win!\",\n      \"I demand a rematch!\",\n    ];\n    const loselines=[\n      \"Ha! Ha! Noob!\",\n      \"Even before we started I knew I would win.\",\n      \"Try an easier difficulty level, loser!\",\n      \"You Lose!\",\n    ];\n    const drawlines=[\n      \"Draw\",\n      \"As Expected, You can't win against me!\",\n      \"Good game!\",\n      \"Don't get cocky and think that you're equal to me or something!\",\n    ];\n    if(this.state.gamestate!==null){\n      var gs=this.state.gamestate;\n      if(gs===0){\n        status=drawlines[Math.floor(Math.random()*(drawlines.length-1))];\n      }\n      else if(gs==='X'){\n        status=winlines[Math.floor(Math.random()*(winlines.length-1))];\n      }\n      else{\n        status=loselines[Math.floor(Math.random()*(loselines.length-1))];\n      }\n    }\n    if(this.props.reset){\n      this.setState({squares:Array(9).fill(null),gamestate:null});\n      if(this.props.firstplayer==2){\n        // var tmp=backtracking(Array(9).fill(0),2),squarestmp2=Array(9).fill(null);\n        // squarestmp2[tmp[0]]='O';\n        // this.setState({squares: squarestmp2});\n        this.compmove(Array(9).fill(0),Array(9).fill(null));\n      }\n      this.props.resetdone();\n    }\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      firstplayer:1,\n      difficulty:0.7,\n      reset:false,\n    }\n    this.startgame=this.startgame.bind(this);\n    this.resetdone=this.resetdone.bind(this);\n  }\n  startgame(player,diff){\n    this.setState({firstplayer: player, difficulty: diff,reset:true});\n  }\n  resetdone(){\n    this.setState({reset:false});\n  }\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-options\">\n          <GameOptions firstplayer={this.state.firstplayer} difficulty={this.state.difficulty} onstart={this.startgame} />\n        </div>\n        <div className=\"game-board\">\n          <Board firstplayer={this.state.firstplayer} difficulty={this.state.difficulty} reset={this.state.reset} resetdone={this.resetdone}/>\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n        <div className=\"source\">\n          <a href=\"https://github.com/ShahPranay/tic-tac-toe\" target=\"_blank\">Source Code</a>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\nvar player2={},player1={};\n\nfunction backtracking(squares,player){\n  var id=0,p=1;\n  for(let j=0;j<9;j++){\n    id+=squares[j]*p;\n    p=p*3;\n  }\n  if(player===2 && (id in player2))\n    return player2[id];\n  if(player===1 && (id in player1))\n    return player1[id];\n  var possiblemoves=[],n=0;\n  for(let i=0;i<9;++i){\n    if(squares[i]===0){\n      possiblemoves.push(i);\n      ++n;\n    }\n  }\n  var tmp=calculatewinner(squares);\n  if(tmp!==0){\n    if(tmp===2){\n      player2[id]=[-1,10+n];\n      return player2[id];\n    }\n    else{\n      player1[id]=[-1,-10-n];\n      return player1[id];\n    }\n  }\n  \n  if(n===0)\n    return [-1,0];\n  var bestmove,haswon=0;\n  if(player===2)\n    bestmove=[-1,-Infinity];\n  else\n    bestmove=[-1,Infinity];\n  var nxt=(player===1)?2:1;\n  for(let i=0;i<n;i++){\n    squares[possiblemoves[i]]=player;\n    var nextans=backtracking(squares,nxt);\n    if(haswon===0){\n      if(player===2){\n        if(nextans[1]>bestmove[1])\n          bestmove=[possiblemoves[i],nextans[1]];\n      }\n      else{\n        if(nextans[1]<bestmove[1])\n          bestmove=[possiblemoves[i],nextans[1]];\n      }\n    }\n    squares[possiblemoves[i]]=0;\n  }\n  if(player===2)\n    player2[id]=bestmove;\n  else\n    player1[id]=bestmove;\n  return bestmove;\n}\n\nfor(let i=0;i<9;++i){\n  let sq=Array(9).fill(0);\n  sq[i]=1;\n  backtracking(sq,2);\n}\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}